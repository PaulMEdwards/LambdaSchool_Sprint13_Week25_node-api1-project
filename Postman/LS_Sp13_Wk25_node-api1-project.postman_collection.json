{
	"info": {
		"_postman_id": "adf114c1-29f1-4b97-9e7e-452508ccc4e2",
		"name": "LS_Sp13_Wk25_node-api1-project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "POST /api/users (missing bio)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6bd3b5-3913-4ebd-937c-93f56dae29a5",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.users).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.message).to.equal(\"Please provide name and bio for the user.\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Jane Doe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/users (missing bio)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Jane Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "71"
								},
								{
									"key": "ETag",
									"value": "W/\"47-7QwCHWy7uNV3V0RM7qA3LaJi1JI\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 04:23:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Please provide name and bio for the user.\"\n}"
						}
					]
				},
				{
					"name": "POST /api/users (missing name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "436b995e-3b63-41da-a602-8b971eaeb864",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.users).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.message).to.equal(\"Please provide name and bio for the user.\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"bio\": \"Not Tarzan's Wife, another Jane\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/users (missing name)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"bio\": \"Not Tarzan's Wife, another Jane\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "71"
								},
								{
									"key": "ETag",
									"value": "W/\"47-7QwCHWy7uNV3V0RM7qA3LaJi1JI\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 04:23:40 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Please provide name and bio for the user.\"\n}"
						}
					]
				},
				{
					"name": "POST /api/users (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.user.id).to.be.at.least(3);",
									"});",
									"",
									"//Store generated User ID for reuse in subsequent tests",
									"var uid = res.user.id;",
									"pm.collectionVariables.set(\"UserID\", uid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Jane Doe\",\n\t\"bio\": \"Not Tarzan's Wife, another Jane\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/users (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Jane Doe\",\n\t\"bio\": \"Not Tarzan's Wife, another Jane\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "ETag",
									"value": "W/\"20-/twBUjE4304PPFCLAm3SYYOI60s\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 04:23:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"user\": {\n        \"id\": 3\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "GET /api/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1876bfc-1bcb-4802-bc06-71e8c6c921aa",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.users.length).to.be.at.least(2);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.users[0].name).to.equal(\"Samwise Gamgee\");",
									"    pm.expect(res.users[1].name).to.equal(\"Frodo Baggins\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "305"
								},
								{
									"key": "ETag",
									"value": "W/\"131-Kduwq9AONOpvwm5VKYuEgEp3c8k\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 04:10:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"users\": [\n        {\n            \"id\": 1,\n            \"name\": \"Samwise Gamgee\",\n            \"bio\": \"Gardener and poet. Married to Rose Cotton\",\n            \"created_at\": \"2019-02-11 14:07:31\",\n            \"updated_at\": \"2019-02-11 14:07:31\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Frodo Baggins\",\n            \"bio\": \"The ring bearer\",\n            \"created_at\": \"2019-02-11 14:07:31\",\n            \"updated_at\": \"2019-02-11 14:07:31\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "GET /api/users/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.user.name).to.equal(\"Jane Doe\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/{{UserID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"{{UserID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/users/:id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "177"
								},
								{
									"key": "ETag",
									"value": "W/\"b1-DFFAf0T3dWYhsCHopVpjYaLVVvY\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 04:17:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"users\": {\n        \"id\": 1,\n        \"name\": \"Samwise Gamgee\",\n        \"bio\": \"Gardener and poet. Married to Rose Cotton\",\n        \"created_at\": \"2019-02-11 14:07:31\",\n        \"updated_at\": \"2019-02-11 14:07:31\"\n    }\n}"
						}
					]
				},
				{
					"name": "GET /api/users/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(res.success).to.equal(false);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.users).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.errorMessage).to.equal(\"The user with the specified ID does not exist.\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/users/:id (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"999"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "81"
								},
								{
									"key": "ETag",
									"value": "W/\"51-NbFkt4o+mokR57dVt5KmZ+qU3qo\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 04:17:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"The user with the specified ID does not exist.\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "PUT /api/users/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7c0b18-8c9b-4035-a568-56f7abaf3129",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.userIdUpdated).to.equal(pm.collectionVariables.get('UserID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Sarah Connor\",\n\t\"bio\": \"Mother and Protector of the Leader of the Resistance\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/{{UserID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"{{UserID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/users/:id",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sarah Connor\",\n\t\"bio\": \"Mother and Protector of the Leader of the Resistance\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "ETag",
									"value": "W/\"22-aXuSX4C5MEAjFRphLQO8j7lhTF8\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 06:25:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"userIdUpdated\": 1\n}"
						}
					]
				},
				{
					"name": "PUT /api/users/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"The user with the specified ID does not exist.\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"John Connor\",\n\t\"bio\": \"Leader of the Resistance\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/users/:id (not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"John Connor\",\n\t\"bio\": \"Leader of the Resistance\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "81"
								},
								{
									"key": "ETag",
									"value": "W/\"51-NbFkt4o+mokR57dVt5KmZ+qU3qo\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 06:27:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"The user with the specified ID does not exist.\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/users/:id (missing bio)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afa213a4-8aad-44b4-baa1-50a06be4fe81",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Please provide name and bio for the user.\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"The Terminator\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/{{UserID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"{{UserID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/users/:id (missing bio)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"The Terminator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"3"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "71"
								},
								{
									"key": "ETag",
									"value": "W/\"47-7QwCHWy7uNV3V0RM7qA3LaJi1JI\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 06:30:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Please provide name and bio for the user.\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/users/:id (missing name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d5cd2b5-aadf-4cc7-8d92-abc722298c14",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Please provide name and bio for the user.\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"bio\": \"A cyborg assassin from the future disguised as a human\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/{{UserID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"{{UserID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/users/:id (missing name)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"bio\": \"A cyborg assassin from the future disguised as a human\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"3"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "71"
								},
								{
									"key": "ETag",
									"value": "W/\"47-7QwCHWy7uNV3V0RM7qA3LaJi1JI\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 06:30:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Please provide name and bio for the user.\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "DELETE /api/users/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"The user with the specified ID does not exist.\");",
									"});",
									"",
									"pm.test('Success=false', () => {",
									"    pm.expect(res.success).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/users/:id (not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "81"
								},
								{
									"key": "ETag",
									"value": "W/\"51-NbFkt4o+mokR57dVt5KmZ+qU3qo\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 06:45:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errorMessage\": \"The user with the specified ID does not exist.\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/users/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.success).to.equal(true);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.userIdRemoved).to.equal(pm.collectionVariables.get('UserID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/{{UserID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"{{UserID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/users/:id",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/users/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "ETag",
									"value": "W/\"22-QvdQgiantea4wpd/q5wPBmremGg\""
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2020 06:45:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"userIdRemoved\": 1\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "81005885-9980-4e6e-b9bf-0043d8f3b03c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d4f0b23e-bbbf-4e4e-9654-506bc8e3d5e8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "89f644cd-8939-41f8-918b-740e0f5fec56",
			"key": "UserID",
			"value": 5,
			"type": "number"
		}
	],
	"protocolProfileBehavior": {}
}